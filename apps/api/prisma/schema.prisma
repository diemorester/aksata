// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                    String             @id @default(auto()) @map("_id") @db.ObjectId
  name                  String             @unique
  email                 String             @unique
  password              String
  avatar                String?
  phone                 String?            
  isVerified            Boolean            @default(false)
  role                  Roles
  otp                   String?
  otpExpired            DateTime?
  changeEmailExpired    DateTime?
  changePasswordExpired DateTime?
  refreshToken          String?
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt()
  Absensi               Absensi[]
  Pengajuan             PengajuanAbsensi[]
  PengajuanLembur       PengajuanLembur[]
}

enum Roles {
  User
  SuperAdmin
  AdminHR
  AdminGudang
}

model Absensi {
  id         String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt()
  clockIn    DateTime?
  clockOut   DateTime?
  duration   String?
  location   String?
  status     Status?
  date       DateTime           @default(now())
  user       User               @relation(fields: [userId], references: [id])
  keterangan String?
  pengajuan  PengajuanAbsensi[]
  userId     String             @db.ObjectId
}

enum Status {
  Hadir
  Sakit
  Cuti
  Izin
  Alpha
}

model PengajuanAbsensi {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  status    StatusPengajuan @default(Waiting)
  user      User            @relation(fields: [userId], references: [id])
  userId    String          @db.ObjectId
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  startDate DateTime?
  endDate   DateTime?
  absensi   Absensi         @relation(fields: [absensiId], references: [id])
  absensiId String          @db.ObjectId
}

enum StatusPengajuan {
  Approved
  Waiting
  Cancelled
  Declined
}

model PengajuanLembur {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  user                  User            @relation(fields: [userId], references: [id])
  userId                String          @db.ObjectId
  nominal               Float?
  tipeLembur            OpsiLembur?
  date                  DateTime
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  statusPengajuanLembur StatusPengajuan
  keterangan            String
}

enum Companies {
  Ristoan
  Hayan
  Sirius
}

enum OpsiLembur {
  LemburSatu
  LemburDua
  LemburTiga
}

model Gudang {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}
